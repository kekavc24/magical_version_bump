name: Bump Version

on:
    pull_request:
        branches: ["master"]
        types: [closed]

jobs:
    extract-target:
      runs-on: ubuntu-latest

      outputs:
        target: ${{ steps.extract-target.outputs.target }}

      steps: 
        - uses: actions/checkout@v3

        - name: 🛂 Ensure pull request was merged
          if: ${{ github.event.pull_request.merged != true }}
          run: exit 1

        - name: 🔍 Extract target
          id: extract-target
          run: |
            target="";
            if (${{contains(github.event.pull_request.labels.*.name, 'major release')}}); then target="major";
            elif (${{contains(github.event.pull_request.labels.*.name, 'minor release')}}); then target="minor";
            elif (${{contains(github.event.pull_request.labels.*.name, 'patch release')}}); then target="patch";
            else exit 1;
            fi;
            echo "target=${target}" >> "$GITHUB_OUTPUT"

    update-version:
      needs: extract-target
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v3
          with:
            ref: ${{ github.ref }}
            fetch-depth: 0
            token: ${{ secrets.VERSION_VERIFY }}

        - name: 🌽 Corn-figure Git ;)
          id: corn-fig-git
          uses: crazy-max/ghaction-import-gpg@v6
          with: 
            gpg_private_key: ${{ secrets.BOT_GPG_KEY }}
            git_config_global: true
            git_user_signingkey: true
            git_commit_gpgsign: true
            git_tag_gpgsign: true
    
        - name: 🎯 Setup Dart
          uses: dart-lang/setup-dart@v1
          with:
            sdk: "stable"

        - name: ✨ Bump version
          uses: kekavc24/magical_workflows/.github/actions/bump_version@v2
          with:
            target: ${{ needs.extract-target.outputs.target }}

        - name: 🧬 Generate new asset graph
          run: dart run build_runner build --delete-conflicting-outputs
    
        - name: 🔍 Get version
          id: get-version
          run: | 
            version="$(cat pubspec.yaml | grep "version:" | head -1 | awk -F: '{print $2};' | tr -d "[:blank:]")"
            echo "Version: $version"
            echo "version=$version" >> "$GITHUB_OUTPUT"
              
        - name: 🆕 Commit & Tag
          run: |
            git commit -am "chore: v${{steps.get-version.outputs.version}}"
            git tag -a ${{steps.get-version.outputs.version}} HEAD -m "v${{steps.get-version.outputs.version}}"
            git push
            git push origin ${{steps.get-version.outputs.version}}
          env:
            GIT_AUTHOR_NAME: ${{ steps.corn-fig-git.outputs.name }}
            GIT_AUTHOR_EMAIL: ${{ steps.corn-fig-git.outputs.email }}
            GIT_COMMITTER_NAME: ${{ steps.corn-fig-git.outputs.name }}
            GIT_COMMITTER_EMAIL: ${{ steps.corn-fig-git.outputs.email }}

        - name: ✅ Verify version
          run: |
            git pull
            dart pub get
            dart run test --run-skipped -t version-verify
